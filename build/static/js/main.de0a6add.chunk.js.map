{"version":3,"sources":["API.js","document.js","App.js","index.js"],"names":["API","path","method","tags","queryParams","id","name","requestInfo","requestType","requestSchema","responseType","responseSchema","responseCodes","code","description","Document","useState","getResponseInfo","pathIndex","map","item","index","className","JSON","stringify","toString","getResponseCodes","console","log","index2","paths","clas","toUpperCase","App","useEffect","pathElements","Object","keys","openapi","info","title","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.de0a6add.chunk.js","sourcesContent":["let getPet = {\n  path: \"/pet\",\n  method: \"get\",\n  tags: [\"Get pet info\"],\n  queryParams: [{ id: 33434, name: \"Tommy\" }],\n  requestInfo: [\n    {\n      requestType: \"application/json\",\n      requestSchema: { name: \"Tommy\", id: 34343 },\n      responseType: \"application/json\",\n      responseSchema: { name: \"Tommy\", id: 34343 },\n      responseCodes: [\n        { code: 200, description: \"OK\" },\n        { code: 404, description: \"Not found\" },\n      ],\n    },\n    {\n      requestType: \"application/xml\",\n      requestSchema: { name: \"username\", id: 34343 },\n      responseType: \"application/xml\",\n      responseSchema: { name: \"username\", id: 34343 },\n      responseCodes: [\n        { code: 200, description: \"OK\" },\n        { code: 404, description: \"Not found\" },\n      ],\n    },\n  ],\n};\n\nlet postPet = {\n  path: \"/pet\",\n  method: \"post\",\n  tags: [\"Post pet info\"],\n\n  queryParams: [{ id: 33434, name: \"Tommy\" }],\n  requestInfo: [\n    {\n      requestType: \"application/json\",\n      requestSchema: { name: \"username\", id: 34343 },\n      responseType: \"application/json\",\n      responseSchema: { name: \"username\", id: 34343 },\n      responseCodes: [\n        { code: 200, description: \"OK\" },\n        { code: 404, description: \"Not found\" },\n      ],\n    },\n    {\n      requestType: \"application/xml\",\n      requestSchema: { name: \"username\", id: 34343 },\n      responseType: \"application/xml\",\n      responseSchema: { name: \"username\", id: 34343 },\n      responseCodes: [\n        { code: 200, description: \"OK\" },\n        { code: 404, description: \"Not found\" },\n      ],\n    },\n  ],\n};\n\nconst API = [getPet, postPet];\n\nexport { API };\n","import react, { useState, useEffect } from \"react\";\nimport { API } from \"./API\";\n\nexport function Document() {\n  const [state, setState] = useState(\"\");\n\n  function getRequestInfo(pathIndex) {\n    let items = API[pathIndex].requestInfo.map(function (item, index) {\n      return (\n        <div key={index.toString()} className=\"requestInfo\">\n          contenty type : {item.requestType}\n          <pre>\n            <code> {JSON.stringify(item.requestSchema)} </code>\n          </pre>\n        </div>\n      );\n    });\n    return items;\n  }\n\n  function getResponseInfo(pathIndex) {\n    let items = API[pathIndex].requestInfo.map(function (item, index) {\n      return (\n        <div key={index.toString()} className=\"response-body\">\n          contenty type :{item.responseType}\n          <pre>\n            <code> {JSON.stringify(item.responseSchema)} </code>\n          </pre>\n        </div>\n      );\n    });\n    return items;\n  }\n\n  function getResponseCodes(pathIndex) {\n    let items = API[pathIndex].requestInfo.map(function (item, index) {\n      console.log(item.responseCodes);\n\n      return (\n        <div key={index.toString()} className=\"response-codes\">\n          <div>\n            {\" \"}\n            {item.responseCodes.map(function (code, index2) {\n              return (\n                <div key={index2.toString()} className=\"response-code\">\n                  {\" \"}\n                  <p className=\"code\"> {code.code} </p>{\" \"}\n                  <p className=\"code-description\"> {code.description} </p>{\" \"}\n                </div>\n              );\n            })}{\" \"}\n          </div>\n        </div>\n      );\n    });\n    return items;\n  }\n\n  const paths = API.map(function (item, index) {\n    return (\n      <div key={index.toString()} className=\"resource\">\n        <h3 clas=\"tag\"> {item.tags[0]} </h3>\n        <p>\n          Method:{\" \"}\n          <span className={item.method + \"-method\"}>\n            {\" \"}\n            {item.method.toUpperCase()}{\" \"}\n          </span>{\" \"}\n          <span className=\"path\">\n            {\" \"}\n            Path:\n            {item.path}\n          </span>{\" \"}\n        </p>\n        <div className=\"query-params\">\n          <p> Query Paramerters </p>\n          {JSON.stringify(item.queryParams)}\n        </div>\n        <h4> Request body </h4>\n        {getRequestInfo(index)}\n        <h4> Response Info </h4>\n        {getResponseInfo(index)}\n        <h4> Response codes </h4>\n        {getResponseCodes(index)}\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <h3>Document</h3>\n      {paths}\n    </div>\n  );\n}\n","import \"./styles.css\";\nimport openapi from \"./openapi\";\nimport { useEffect } from \"react\";\nimport { Document } from \"./document\";\nexport default function App() {\n  useEffect(function () {}, []);\n\n  let paths = Object.keys(openapi.paths);\n\n  const pathElements = paths.map(function (path, index) {\n    return (\n      <li key={index.toString()} className=\"sidebarItem\">\n        {\" \"}\n        {path}{\" \"}\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"grid\">\n      <div className=\"sidebar\">\n        <ol className=\"list\">{pathElements}</ol>\n      </div>\n      <div className=\"main\">\n        {\" \"}\n        <h1>{openapi.info.title}</h1>\n        <p> {openapi.info.description} </p>\n        {<Document />}\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}